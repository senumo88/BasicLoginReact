{"ast":null,"code":"import _slicedToArray from \"H:\\\\React\\\\login\\\\react-protected-route\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"H:\\\\React\\\\login\\\\react-protected-route\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Redirecting, ProtectedRoute } from './components';\nimport { LoginPage, PublicPage, ProtectedPage, NotFoundPage } from './pages';\n\nconst App = () => {\n  const token = localStorage.getItem('token');\n\n  const _useState = useState(token && token.length > 0),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        setIsAuthenticated = _useState2[1];\n\n  const onClickLogout = e => {\n    setIsAuthenticated(false);\n    localStorage.clear();\n  };\n\n  const onClickAuthenticateButton = (data, e) => {\n    console.log(\"Bienvenido \" + data.apellido + \" \" + data.nombre);\n    localStorage.setItem('token', 'Bearer Valid_TOKEN');\n    localStorage.setItem('nombre', data.nombre);\n    localStorage.setItem('apellido', data.apellido);\n    setIsAuthenticated(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, isAuthenticated ? React.createElement(Redirecting, {\n      to: \"/protected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }) : React.createElement(LoginPage, Object.assign({}, props, {\n      onClickAuthenticateButton: onClickAuthenticateButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: PublicPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(ProtectedRoute, {\n    path: \"/protected\",\n    component: ProtectedPage,\n    componentProps: {\n      onClickLogout\n    },\n    isAuthenticated: isAuthenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Route, {\n    component: NotFoundPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["H:/React/login/react-protected-route/src/App.js"],"names":["React","useState","Switch","BrowserRouter","Router","Route","Redirecting","ProtectedRoute","LoginPage","PublicPage","ProtectedPage","NotFoundPage","App","token","localStorage","getItem","length","isAuthenticated","setIsAuthenticated","onClickLogout","e","clear","onClickAuthenticateButton","data","console","log","apellido","nombre","setItem","props"],"mappings":";;AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,aAAa,IAAIC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,cAA5C;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,aAAhC,EAA+CC,YAA/C,QAAmE,SAAnE;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AADgB,oBAE8Bd,QAAQ,CACpDY,KAAK,IAAIA,KAAK,CAACG,MAAN,GAAe,CAD4B,CAFtC;AAAA;AAAA,QAETC,eAFS;AAAA,QAEQC,kBAFR;;AAMhB,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAJ,IAAAA,YAAY,CAACO,KAAb;AACD,GAHD;;AAIA,QAAMC,yBAAyB,GAAG,CAACC,IAAD,EAAMH,CAAN,KAAY;AAC5CI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcF,IAAI,CAACG,QAAnB,GAA4B,GAA5B,GAAgCH,IAAI,CAACI,MAAjD;AACAb,IAAAA,YAAY,CAACc,OAAb,CAAqB,OAArB,EAA8B,oBAA9B;AACAd,IAAAA,YAAY,CAACc,OAAb,CAAqB,QAArB,EAA+BL,IAAI,CAACI,MAApC;AACAb,IAAAA,YAAY,CAACc,OAAb,CAAqB,UAArB,EAAiCL,IAAI,CAACG,QAAtC;AACAR,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAND;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAuB,IAAA,MAAM,EAAGW,KAAD,IAC3B,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,eAAe,GACd,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc,GAGd,oBAAC,SAAD,oBACMY,KADN;AAEE,MAAA,yBAAyB,EAAEP,yBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEb,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,YAArB;AAAkC,IAAA,SAAS,EAAEC,aAA7C;AACE,IAAA,cAAc,EAAE;AAAES,MAAAA;AAAF,KADlB;AAEE,IAAA,eAAe,EAAEF,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAmBE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CADF,CADF;AA2BD,CA5CD;;AA8CA,eAAeC,GAAf","sourcesContent":["import './App.css'\r\n\r\nimport React, { useState } from 'react'\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Redirecting, ProtectedRoute } from './components'\r\nimport { LoginPage, PublicPage, ProtectedPage, NotFoundPage } from './pages'\r\n\r\nconst App = () => {\r\n  const token = localStorage.getItem('token')\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    token && token.length > 0\r\n  )\r\n\r\n  const onClickLogout = (e) => {\r\n    setIsAuthenticated(false)\r\n    localStorage.clear()\r\n  }\r\n  const onClickAuthenticateButton = (data,e) => {\r\n    console.log(\"Bienvenido \"+data.apellido+\" \"+data.nombre );\r\n    localStorage.setItem('token', 'Bearer Valid_TOKEN')\r\n    localStorage.setItem('nombre', data.nombre)\r\n    localStorage.setItem('apellido', data.apellido)\r\n    setIsAuthenticated(true)\r\n  }\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/'  render={(props) => (\r\n              <React.Fragment>\r\n                {isAuthenticated ? (\r\n                  <Redirecting to='/protected' />\r\n                ) : (\r\n                  <LoginPage\r\n                    {...props}\r\n                    onClickAuthenticateButton={onClickAuthenticateButton}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n          <Route exact path='/' component={PublicPage} />\r\n          <ProtectedRoute path='/protected' component={ProtectedPage}\r\n            componentProps={{ onClickLogout }}\r\n            isAuthenticated={isAuthenticated}\r\n          />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}